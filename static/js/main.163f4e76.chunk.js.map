{"version":3,"sources":["locales.ts","Components/Header/logo.svg","Components/Button/RippleEffect.tsx","Components/Button/index.tsx","Components/Text/index.tsx","Components/Header/index.tsx","Pages/Main/bg.png","Pages/Main/step1.png","Pages/Main/step2.png","Pages/Main/step3.png","Pages/Main/step4.png","Pages/Main/student1.png","Pages/Main/student2.png","Pages/Main/student3.png","Pages/Main/student4.png","Pages/Main/student5.png","Pages/Main/student6.png","Helpers/updateemitter.ts","Helpers/api.ts","Helpers/useLoad.ts","Components/Students/index.tsx","Components/StudentCard/specialty.svg","Components/StudentCard/university.svg","Components/StudentCard/quote.svg","Components/StudentCard/index.tsx","Components/LoadingSpinner/index.tsx","Pages/Main/index.tsx","Pages/Students/bg.png","Components/AutoScrollable/index.tsx","Pages/Students/index.tsx","App.tsx","index.tsx"],"names":["translation","pow2","a","Math","pow","RippleEffect","props","onDownListener","onUpListener","element","event","this","disabled","coordinates","MouseEvent","clientX","clientY","TouchEvent","touch","changedTouches","undefined","takeXY","callback","rect","getBoundingClientRect","x","left","y","top","radius","sqrt","max","width","height","duration","ripple","document","createElement","className","style","transitionDuration","color","backgroundColor","rgba","slice","setAttribute","Date","now","toString","addEventListener","e","onClick","window","requestAnimationFrame","setTimeout","appendChild","ripples","querySelectorAll","i","startTime","parseInt","attributes","passedTime","fadeOut","opacity","remove","fadeOutDuration","length","div","findDOMNode","onDown","bind","passive","onUp","removeEventListener","children","React","Button","outline","to","component","ref","cx","H1","P1","P2","languages","text","code","Header","useTranslation","i18n","t","atTop","setAtTop","onScroll","scrollY","map","selected","language","changeLanguage","src","logo","pages","textKey","path","HeaderTabs","history","useHistory","location","useLocation","pathname","push","UpdateEmitter","uniqueId","callbacks","id","key","args","apply","includes","parameters","useForceUpdate","onSubscribed","updateThem","current","updateExcept","onUpdate","offUpdate","Object","create","dispatch","endpoint","makeQuery","query","keys","encodeURIComponent","join","__reqjson","fetch","json","result","DataSource","loadCallback","pageCount","items","loading","complete","update","myID","load","getStudents","count","offset","regionId","universityId","specialityId","facultyId","Courses","title","useDeepCompareMemoize","value","deepCompareEquals","useLoad","loader","deps","initialValue","useLoadState","setValue","unmounted","promise","then","receivedValue","StudentsBlock","withFirstLetterUppercase","str","trim","toUpperCase","substring","StudentCard","student","uuid","name","find","course","university","specialty","speciality","about","quote","social","LoadingSpinner","size","center","centerProps","xcenter","ycenter","viewBox","cy","r","fill","strokeLinecap","strokeWidth","stroke","MainPage","stat","firstStudents","backgroundImage","bg","step1","step2","step3","step4","center-x","studentsCount","universitiesCount","student1","student2","student3","student4","student5","student6","root","getElementById","AutoScrollable","data","atBottom","gap","scrollTop","clientHeight","scrollHeight","forceUpdate","scrollHandler","nextProps","item","template","whenEmpty","StudentsPage","_","App","exact","i18next","use","initReactI18next","init","resources","lng","keySeparator","fallbackLng","interpolation","escapeValue","console","log","ReactDOM","I18nextProvider"],"mappings":"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","file":"static/js/main.163f4e76.chunk.js","sourcesContent":["const ua = {\n    'header-login': 'Вхід',\n    'header-register': 'Зареєструватися',\n\n    'header-tab-main': 'Головна',\n    'header-tab-about': 'Про нас',\n    'header-tab-students': 'Студенти',\n\n\n    'main-first-header': 'Дізнайся про ВНЗ безпосередньо від студентів',\n    'main-first-question1': 'Яку спеціальність обрати?',\n    'main-first-question2': 'Як навчають в університеті?',\n    'main-first-question3': 'Які умови в гуртожитку?',\n    'main-first-question4': 'Чи складно знайти роботу за спеціальністю?',\n    'main-first-body1': 'Хвилюють ці та інші запитання?',\n    'main-first-body2': 'Наша команда студентів-волонтерів з радістю поділиться досвідом.',\n    'main-first-button': 'Знайти студента!',\n\n    'main-second-header': 'Як працює StudSearch?',\n    'main-second-step1': 'Студенти рєеструються на платформі',\n    'main-second-step2': 'Абітурієнт обирає до кого їй/йому звернутися за порадою',\n    'main-second-step3': 'Ми допомогаємо встановити контакт між студентом та абітурієнтом',\n    'main-second-step4': 'Абітурієнт отримує відповіді на питання, які її/його хвилюють',\n\n    'main-third-header': 'Ми прагнемо ділитись досвідом з абітурієнтами',\n\n    'main-fourth-students': 'Студентів',\n    'main-fourth-universities': 'Університетів',\n    'main-fourth-header': 'В одному місці',\n    'main-fourth-text': 'Обрати заклад вищої освіти - це надзвичайно важливо та складно! Тому ми прагнемо допомогти абітурієнтам. Разом з StudSearch.org абітурієнтам більше не доведеться робити один з найважливіших виборів життя наосліп.',\n    'main-fourth-register': 'Стати волонтером',\n\n\n    'students-first-header': 'Каталог студентів'\n};\nconst ru = {\n    'header-login': 'Войти',\n    'header-register': 'Зарегистрироваться',\n\n    'header-tab-main': 'Главная',\n    'header-tab-about': 'Про нас',\n    'header-tab-students': 'Студенты',\n\n    'main-first-header': 'Узнайте больше о ВУЗе от студентов',\n    'main-first-question1': 'Какую специальность выбрать?',\n    'main-first-question2': 'Как учат в университете?',\n    'main-first-question3': 'Какие условия общежития?',\n    'main-first-question4': 'Сложно ли найти работу по специальности?',\n    'main-first-body1': 'Волнуют эти и другие вопросы?',\n    'main-first-body2': 'Наша команда студентов-волонтёров с радостью поделится опытом.',\n    'main-first-button': 'Найти студента!',\n\n    'main-second-header': 'Как работает StudSearch?',\n    'main-second-step1': 'Студенты регистрируются на платформе',\n    'main-second-step2': 'Абитуриент выбирает к кому ей/ему обратиться за советом',\n    'main-second-step3': 'Мы помогаем установить контакт между абитуриентом и студентом',\n    'main-second-step4': 'Абитуриент получает ответы на вопросы, которые его волнуют',\n\n    'main-third-header': 'Мы стремимся делиться опытом с абитуриентами',\n\n    'main-fourth-students': 'Студентов',\n    'main-fourth-universities': 'Университетов',\n    'main-fourth-header': 'В одном месте',\n    'main-fourth-text': 'Выбрать высшее учебное заведение — это очень важно и сложно! Поэтому мы стремимся помочь абитуриентам. Вместе с StudSearch.org абитуриентам больше не придется делать один из важнейших выборов жизни вслепую.',\n    'main-fourth-register': 'Стать волонтёром',\n\n    'students-first-header': 'Каталог студентов'\n};\nconst en = {\n    'header-login': 'Sign in',\n    'header-register': 'Sign up',\n\n    'header-tab-main': 'Main',\n    'header-tab-about': 'About us',\n    'header-tab-students': 'Students',\n\n    'main-first-header': 'Learn about the university from its students',\n    'main-first-question1': 'Which specialty should you choose?',\n    'main-first-question2': 'How is it taught at the university?',\n    'main-first-question3': 'What are the conditions of the dormitory?',\n    'main-first-question4': 'Is it hard to find a job in your specialty?',\n    'main-first-body1': 'Are you worried about those questions?',\n    'main-first-body2': 'Our team of volunteer students are ready to share their experience.',\n    'main-first-button': 'Find a student!',\n\n    'main-second-header': 'How does StudSearch work?',\n    'main-second-step1': 'Students register on the platform',\n    'main-second-step2': 'Applicant chooses whom to turn to for advice',\n    'main-second-step3': 'We help to connect student and applicant',\n    'main-second-step4': 'Applicant gets answers to questions he/she is worried about',\n\n    'main-third-header': 'We strive to share the experience with future students',\n\n    'main-fourth-students': 'Students',\n    'main-fourth-universities': 'Universities',\n    'main-fourth-header': 'In one place',\n    'main-fourth-text': 'Choosing university is very important and difficult! That\\'s why we strive to help future students. Together with StudSearch.org applicants do not need to make one of the most important choices blindly.',\n    'main-fourth-register': 'Become a volunteer',\n\n    'students-first-header': 'Students list'\n};\n\nexport default {\n    'uk-UA': { translation: ua },\n    'ru-RU': { translation: ru },\n    'en-US': { translation: en }\n}","export default __webpack_public_path__ + \"static/media/logo.5602b010.svg\";","import * as React from 'react';\nimport rgba from 'color-rgba';\nimport { findDOMNode } from 'react-dom';\n\nimport './RippleEffect.scss';\n\nfunction takeXY(event : MouseEvent | TouchEvent) : [number, number] | null {\n  if (event instanceof MouseEvent)\n    return [event.clientX, event.clientY];\n  if (event instanceof TouchEvent) {\n    const touch = event.changedTouches[0];\n    if (touch === undefined || touch === null)\n      return null;\n    return [touch.clientX, touch.clientY];\n  }\n  return null;\n}\nconst pow2 = (a: number) => Math.pow(a, 2);\nconst nextFrame = (callback: () => void) => {\n  if (window.requestAnimationFrame)\n      window.requestAnimationFrame(callback);\n  else setTimeout(callback, 15);\n};\n\n/**\n * Bugs with ej2 classNames update forces me to port my own ripple effect implementation to the React.\n * Ported my own implementation to React/TypeScript, that have been used in a lot of my projects.\n */\nclass RippleEffect extends React.Component<{\n  disabled?: boolean;\n  color?: string;\n  onClick?: (event: MouseEvent) => void;\n  duration?: number;\n  fadeOutDuration?: number;\n}> {\n\n  constructor(props: any) {\n    super(props);\n  }\n\n  onDown(element: HTMLElement, event: MouseEvent | TouchEvent) {\n    if (this.props.disabled)\n      return;\n    \n    const coordinates = takeXY(event);\n    if (coordinates === null)\n      return;\n    \n    const rect = element.getBoundingClientRect();\n    const [x, y] = [coordinates[0] - rect.left, coordinates[1] - rect.top];\n    const radius = Math.sqrt(\n      Math.max(\n        pow2(x) + pow2(y),\n        pow2(x - rect.width) + pow2(y),\n        pow2(x - rect.width) + pow2(y - rect.height),\n        pow2(x) + pow2(y - rect.height)\n      )\n    ) * 1.05;\n\n    const duration = this.props.duration || 120;\n    const ripple = document.createElement('div');\n    ripple.className = 'ripple';\n    ripple.style.top = y + \"px\";\n    ripple.style.left = x + \"px\";\n    ripple.style.width = ripple.style.height = '0px';\n    ripple.style.transitionDuration = duration + 'ms';\n    if (this.props.color)\n      ripple.style.backgroundColor = `rgba(${rgba(this.props.color)?.slice(0, 3)}, 0.24)`;\n    ripple.setAttribute('data-start', Date.now().toString());\n    ripple.addEventListener('click', e => this.props?.onClick?.(e));\n    nextFrame(() => {\n      ripple.style.top = (y - radius) + 'px';\n      ripple.style.left = (x - radius) + 'px';\n      ripple.style.width = ripple.style.height = (radius * 2) + 'px';\n    });\n    \n    element.appendChild(ripple);\n  }\n\n  onUp(element : HTMLElement) {\n    const ripples : NodeListOf<any> = element.querySelectorAll('.ripple');\n    if (ripples === null)\n      return;\n\n    const duration = this.props.duration || 120;\n    for (let i = 0; i < ripples.length; ++i) {\n      const ripple = ripples[i];\n      if (ripple.style === undefined)\n        continue;\n\n      const startTime = parseInt(ripple.attributes['data-start']),\n          passedTime = Date.now() - startTime;\n      const fadeOut = () => {\n        ripple.style.opacity = '0';\n        setTimeout(() => {\n          if (ripple !== null)\n            ripple.remove()\n        }, this.props.fadeOutDuration || 120);\n      }\n\n      if (passedTime > duration) {\n        fadeOut();\n      } else {\n        setTimeout(fadeOut, duration - passedTime);\n      }\n    }\n  }\n\n  onDownListener: any;\n  onUpListener: any;\n  componentDidMount() {\n    const div = findDOMNode(this);\n    if (div === null)\n      return;\n    // @ts-ignore\n    this.onDownListener = this.onDown.bind(this, div);\n    div.addEventListener('mousedown',   this.onDownListener);\n    div.addEventListener('touchstart',  this.onDownListener, {passive: true});\n    \n    // @ts-ignore\n    this.onUpListener = this.onUp.bind(this, div);\n    div.addEventListener('contextmenu',   this.onUpListener);\n    window.addEventListener('mouseup',    this.onUpListener);\n    window.addEventListener('mouseleave',   this.onUpListener);\n    window.addEventListener('touchend',   this.onUpListener);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('mouseup',     this.onUpListener);\n    window.removeEventListener('mouseleave',  this.onUpListener);\n    window.removeEventListener('touchend',    this.onUpListener);\n  }\n  \n  render() {  \n    return (\n      <span className=\"ripples\">\n        { this.props.children }\n      </span>\n    );\n  }\n};\n\nexport default RippleEffect;","import * as React from 'react';\nimport cx from 'classnames';\nimport { Link } from 'react-router-dom';\n\nimport './index.scss';\nimport RippleEffect from './RippleEffect';\n\nconst Button = ({\n  children,\n  className, style,\n  outline, to, onClick\n}: {\n  children?: React.ReactNode,\n  className?: string,\n  style?: React.CSSProperties,\n  outline?: boolean\n} & ({\n  to: string,\n  onClick?: never\n} | {\n  to?: never,\n  onClick: (e: React.MouseEvent<HTMLButtonElement> | React.TouchEvent<HTMLButtonElement>) => void\n})) => {\n  if (to) {\n    return (\n      <Link\n        component={React.forwardRef((props, ref) => (\n          <a ref={ref} style={style} {...props}>\n            <RippleEffect />\n            {props.children}\n          </a>\n        ))}\n        className={cx('Button', { outline }, className)}\n        style={style}\n        to={to}\n        children={children}\n      />\n    );\n  }\n  return (\n    <button\n      className={cx('Button', { outline }, className)}\n      style={style}\n      onClick={onClick}\n    >\n      <RippleEffect />\n      {children}\n    </button>\n  );\n}\nexport default Button;","import * as React from 'react';\nimport cx from 'classnames';\n\nimport './index.scss';\n\nexport const H1 = ({ className, ...props } : React.HTMLAttributes<HTMLHeadElement>) => \n  <h1 className={cx('h1', className)} {...props} />;\nexport const P1 = ({ className, ...props } : React.HTMLAttributes<HTMLParagraphElement>) => \n  <p className={cx('p1', className)} {...props} />;\nexport const P2 = ({ className, ...props } : React.HTMLAttributes<HTMLParagraphElement>) => \n  <p className={cx('p2', className)} {...props} />;\nexport const P3 = ({ className, ...props } : React.HTMLAttributes<HTMLParagraphElement>) => \n  <p className={cx('p3', className)} {...props} />;","import * as React from 'react';\nimport cx from 'classnames';\nimport { useTranslation } from 'react-i18next';\nimport { Link, useHistory, useLocation } from 'react-router-dom';\n\nimport logo from './logo.svg';\n\nimport './index.scss';\nimport Button from '../Button';\nimport { P2 } from '../Text';\nimport RippleEffect from '../Button/RippleEffect';\n\nconst languages = [\n  { text: 'UA', code: 'uk-UA' },\n  { text: 'EN', code: 'en-US' },\n  { text: 'RU', code: 'ru-RU' }\n];\n\nconst Header = () => {\n  const { i18n, t } = useTranslation();\n\n  const [atTop, setAtTop] = React.useState(true);\n  React.useEffect(() => {\n    const onScroll = () => {\n      setAtTop(window.scrollY < 25);\n    }\n\n    window.addEventListener('scroll', onScroll);\n    return () => window.removeEventListener('scroll', onScroll);\n  }, [])\n\n  return (\n    <div className={cx(\"Header\", { atTop })}>\n      <div>\n        <div className=\"Header_Top\">\n          <span className=\"Header_Languages\">\n            {\n              languages.map(({ text, code }) => \n                <span\n                  key={code}\n                  className={cx({ selected: i18n.language === code })}\n                  children={<P2>{text}</P2>}\n                  onClick={() => i18n.changeLanguage(code)}\n                />\n              )\n            }\n          </span>\n          <Link className=\"Header_Logo\" to='/'>\n            <img src={logo} />\n          </Link>\n          <span className=\"Header_Buttons\">\n            <Button to='/login' outline>\n              <P2>{t('header-login')}</P2>\n            </Button>\n            <Button className=\"Header_Buttons_Register\" to='/sign-up'>\n              <P2>{t('header-register')}</P2>\n            </Button>\n          </span>\n        </div>\n        <div className=\"Header_Bottom\">\n          <HeaderTabs />\n        </div>\n      </div>\n    </div>\n  )\n};\n\nexport default Header;\n\nconst pages = [\n  { textKey: 'header-tab-main', path: '/' },\n  { textKey: 'header-tab-about', path: '/about' },\n  { textKey: 'header-tab-students', path: '/students' }\n];\n\nconst HeaderTabs = () => {\n  const { i18n, t } = useTranslation();\n  const history = useHistory();\n  const location = useLocation();\n\n  return (\n    <div className=\"HeaderTabs\">\n      { pages.map(({ textKey, path }) => {\n        const selected = location.pathname === path;\n        return (\n          <span className={cx('HeaderTabs_Tab', { selected })}>\n            <span\n              onClick={() => {\n                history.push(path);\n              }}\n            >\n              <RippleEffect disabled={selected} />\n              <P2>{t(textKey)}</P2>\n            </span>\n          </span>\n        );\n      }) }\n    </div>\n  );\n}","export default __webpack_public_path__ + \"static/media/bg.a1b62c03.png\";","export default __webpack_public_path__ + \"static/media/step1.931daec4.png\";","export default __webpack_public_path__ + \"static/media/step2.12f58635.png\";","export default __webpack_public_path__ + \"static/media/step3.a2574a61.png\";","export default __webpack_public_path__ + \"static/media/step4.5d3fdc0c.png\";","export default __webpack_public_path__ + \"static/media/student1.8bb87726.png\";","export default __webpack_public_path__ + \"static/media/student2.ecd6e1e0.png\";","export default __webpack_public_path__ + \"static/media/student3.6fd37814.png\";","export default __webpack_public_path__ + \"static/media/student4.734798c3.png\";","export default __webpack_public_path__ + \"static/media/student5.2c8fcac1.png\";","export default __webpack_public_path__ + \"static/media/student6.55a43d3f.png\";","import * as React from 'react';\n\nexport type UpdateFunction<T extends unknown[]> = (...args: T) => void;\n\nexport default class UpdateEmitter<Args extends unknown[]> {\n    private uniqueId : number = 0;\n    private callbacks: {[id: number]: UpdateFunction<Args>} = {};\n\n    onUpdate(callback: UpdateFunction<Args>) : number {\n        const id = this.uniqueId++;\n        this.callbacks[id] = callback;\n        return id;\n    }\n    offUpdate(callback: UpdateFunction<Args>) {\n        for (const key in this.callbacks) {\n            if (this.callbacks[key] === callback)\n                delete this.callbacks[key];\n        }\n    }\n\n    update(...args : Args) {\n        for (const key in this.callbacks)\n            this.callbacks[key].apply(null, args);\n    }\n    updateExcept(id: null | number | number[], ...args : Args) {\n        for (const key in this.callbacks) {\n            if (id === null || \n                (typeof id === 'number' && key !== id.toString()) ||\n                (typeof id !== 'number' && !id.includes(parseInt(key)))) {\n\n                this.callbacks[key].apply(null, args);\n            }\n        }\n    }\n\n    /** \n     * subscribe() is a custom hook to write less code in functional components\n     * It handles a listener to force update a component on component's lifecycle\n     * Also it returns an update function, that will trigger all other listeners except itself\n     * \n     * But sometimes component maybe just need to listen to these updates, not fully rerendering itself\n     * In these cases, you can put own callback instead\n     */\n    subscribe(\n      parameters?: any[],\n      // eslint-disable-next-line\n      callback : UpdateFunction<Args> = useForceUpdate(),\n      onSubscribed?: (updateThem: UpdateFunction<Args>) => void\n    ) : UpdateFunction<Args> {\n        // eslint-disable-next-line\n        let id = React.useRef<number>();\n        const updateThem = (...args: Args) => {\n            if (id.current !== undefined)\n                this.updateExcept(id.current, ...args);\n        };\n        // eslint-disable-next-line\n        React.useEffect(() => {\n            id.current = this.onUpdate(callback);\n            if (onSubscribed)\n                onSubscribed(updateThem);\n            return () => {    \n                this.offUpdate(callback);\n            }\n        }, parameters);\n\n        return updateThem;\n    }\n}\n\nfunction useForceUpdate(): () => void {\n  const [ , dispatch ] = React.useState<{}>(Object.create(null));\n\n  const memoizedDispatch = React.useCallback(\n    (): void => {\n      dispatch(Object.create(null));\n    },\n    [ dispatch ],\n  );\n  return memoizedDispatch;\n}","import UpdateEmitter from './updateemitter';\n\nexport const DEV = !process.env.NODE_ENV || process.env.NODE_ENV === 'development';\n\nexport const baseURL = DEV ? \"https://localhost.test\" : \"https://studsearch.org\";\nexport const endpoint = DEV ? \"http://localhost:2323\" : \"https://server.studsearch.org:2323\";\nexport const telegramBot = DEV ? \"StudSearch_TestBot\" : \"StudSearchBot\";\nexport const instagramClientId = '710477512866503';\n\nconst makeQuery = (query?: {[key: string]: any}) => {\n    if (typeof query !== 'object')\n        return '';\n    return '?' + Object.keys(query).map(key => encodeURIComponent(key) + '=' + encodeURIComponent(query[key])).join('&');\n};\nexport const getQuery = (name : string, url : string = window.location.href) => {\n    name = name.replace(/[\\[\\]]/g, '\\\\$&');\n    var regex = new RegExp('[?&]' + name + '(=([^&#]*)|&|#|$)'),\n        results = regex.exec(url);\n    if (!results) return null;\n    if (!results[2]) return '';\n    return decodeURIComponent(results[2].replace(/\\+/g, ' '));\n};\n\n\nconst store : {[path: string]: any} = {};\nexport const __reqjson = async (path: string, query?: any) : Promise<any> => {\n    // if (store[path])\n    //     return store[path];\n    const result = await (await fetch(endpoint + path + makeQuery(query))).json();\n    // store[path] = result;\n    return result;\n};\n\nexport class DataSource<T> extends UpdateEmitter<[]> {\n    items: T[] = [];\n    loading: boolean = false;\n    complete: boolean = false;\n    constructor(loadCallback: (query: string, count: number, offset: number) => Promise<T[] | undefined>, pageCount: number = 50) {\n        super();\n\n        this.loadCallback = loadCallback;\n        this.pageCount = pageCount;\n    }\n\n    private id : number = 0;\n    private query: string = '';\n    pageCount: number = 20;\n    loadCallback: (query: string, count: number, offset: number) => Promise<T[] | undefined>;\n    async load() {\n        if (this.complete || this.loading)\n            return;\n\n        this.loading = true;\n        this.update();\n\n        const myID = ++this.id;\n        let result = await this.loadCallback(this.query, this.pageCount, this.items.length);\n        if (myID !== this.id)\n            return;\n            \n        if (result === undefined || result.length < this.pageCount)\n            this.complete = true;\n        if (result !== undefined)\n            this.items.push(...result);\n        this.loading = false;\n        this.update();\n    }\n\n    async updateQuery(query: string = '') {\n        if (this.query === query)\n            return;\n        this.query = query;\n        this.items = [];\n        this.loading = false;\n        this.complete = false;\n        this.update();\n        await this.load();\n    }\n\n\n}\n\n\nexport interface Region {\n    id: number;\n    name: string;\n    universitiesCount: number | string;\n    studentsCount: number | string;\n};\nexport interface RegionsData {\n    regions: Region[];\n    yours: number | null;\n}\nexport const getRegions = async () : Promise<RegionsData> => {\n    const result = await __reqjson('/regions');\n    if (Array.isArray(result))\n        return {regions: result, yours: null};\n    return result;\n};\n\n\nexport interface University {\n    id: number;\n    name: string;\n    studentsCount: number;\n};\nexport const getUniversities = (query: string = '', regionId?: number, count: number = 50, offset: number = 0) : Promise<University[]> => \n    __reqjson(\"/universities/\" + (regionId !== undefined ? regionId : ''), {count, offset, query});\nexport const Universities = <T>(customizer: (university: University) => T, regionId?: number) =>\n    new DataSource<T>(async (query, count, offset) => {\n        return (await getUniversities(query, regionId, count, offset))\n            .map(customizer);\n    });\n\nexport interface Faculty {\n    id: number;\n    name: string;\n    studentsCount: number;\n};\nexport const getFaculties = (query: string = '', universityId?: number, count: number = 50, offset: number = 0) : Promise<Faculty[]> => \n    __reqjson(\"/faculties/\" + (universityId !== undefined ? universityId : ''), {count, offset, query});\nexport const Faculties = <T>(customizer: (faculty: Faculty) => T, universityId?: number) =>\n    new DataSource<T>(async (query, count, offset) => {\n        return (await getFaculties(query, universityId, count, offset))\n            .map(customizer);\n    });\n\nexport interface Speciality {\n    id: number;\n    name: string;\n    code: string;\n    studentsCount: number;\n}\nexport const getSpecialities = (query: string = '', universityId?: number, count: number = 50, offset: number = 0) : Promise<Speciality[]> =>\n    __reqjson(\"/specialities/\" + (universityId !== undefined ? universityId : ''), {count, offset, query});\nexport const Specialities = <T>(customizer: (speciality: Speciality) => T, universityId?: number) =>\n    new DataSource<T>(async (query, count, offset) => \n        (await getSpecialities(query, universityId, count, offset))\n            .map(customizer)\n    );\n\nexport interface Student {\n    uuid: string;\n    name: string;\n    about: string;\n    course: number;\n    social: string[];\n\n    university: string;\n    faculty: string;\n    speciality: string;\n};\nexport const getStudents = async (count: number, offset: number = 0, regionId?: number, universityId?: number, specialityId?: number, facultyId?: number) : Promise<Student[]> =>\n  __reqjson(\"/students/\", {regionId, universityId, specialityId, facultyId, count, offset});\n// {\n//     await new Promise(resolve => setTimeout(resolve, 1000));\n//     return Array(count).fill(null).map((_, i) => ({\n//         uuid: (Math.random() * 999999).toString(),\n//         name: Math.round(Math.random() * 999999).toString(),\n//         about: Math.round(Math.random() * 9999999999999).toString().repeat(Math.random() * 20),\n\n//         course: Math.round(Math.random() * 6),\n\n//         university: Math.round(Math.random() * 9999999999999).toString(),\n//         faculty: Math.round(Math.random() * 9999999999999).toString(),\n//         speciality: Math.round(Math.random() * 9999999999999).toString(),\n\n//         social: ['telegram']\n//     }))\n// }\n    \nexport const Students = (regionId?: number, universityId?: number, facultyId?: number, specialityId?: number) =>\n    new DataSource<Student>(async (_, count, offset) => \n        await getStudents(count, offset, regionId, universityId, specialityId, facultyId),\n        12\n    );\n\n// export const getStudentLink = (studentUUID: string, social: string) => \n//     __reqjson(`/link/${studentUUID}/${social}/`);\nexport const studentLink = (studentUUID: string, social: string) =>\n    `${endpoint}/link/${studentUUID}/${social}/`;\n\nexport const login = async (socialName: string, data: any) =>\n    await __reqjson(`/auth/${socialName}`, {data: JSON.stringify(data)});\nexport const instagramLink = () =>\n    `https://www.instagram.com/oauth/authorize?client_id=${instagramClientId}&redirect_uri=${baseURL}/callback/instagram/&response_type=code&scope=user_profile`\n\nexport const count = async () : Promise<{studentsCount: number, universitiesCount: number}> =>\n    await __reqjson('/count/');\n\nexport const register = async (\n    name: string,\n    about: string,\n    universityID: number,\n    facultyID: number,\n    specialityID: number,\n    course: number,\n    tokens: string[]\n) => await __reqjson(\"/register/\", {name, about, universityID, facultyID, specialityID, course, tokens: tokens.join(',')});\n\nexport const Courses = [\n    {id: 0, title: \"1 курс\"},\n    {id: 1, title: \"2 курс\"},\n    {id: 2, title: \"3 курс\"},\n    {id: 3, title: \"4 курс\"},\n    {id: 4, title: \"5 курс\"},\n    {id: 5, title: \"6 курс\"},\n    {id: 6, title: \"Випускник\"}\n];","import * as React from 'react';\n\nimport deepCompareEquals from 'deep-equal';\n\nexport function useDeepCompareMemoize(value: any) {\n    const ref = React.useRef();\n    if (!deepCompareEquals(value, ref.current))\n        ref.current = value;\n    return ref.current;\n} \n\nconst useLoad = <T>(\n    loader: () => Promise<T>,\n    deps: React.DependencyList = [],\n    initialValue: T | null = null\n) : T | null => {\n    return useLoadState(loader, deps, initialValue)[0];\n}\nexport default useLoad;\nexport const useLoadState = <T>(\n    loader: () => Promise<T>,\n    deps: React.DependencyList = [],\n    initialValue: T | null = null\n) : [T | null, React.Dispatch<React.SetStateAction<T | null>>] => {\n    const [value, setValue] = React.useState(initialValue);\n    React.useEffect(() => {\n        if (value !== initialValue)\n            setValue(initialValue);\n\n        let unmounted = false;\n        const promise = loader();\n        if (promise && promise['then'])\n            promise.then(receivedValue => {\n                if (!unmounted)\n                    setValue(receivedValue);\n            });\n        else setValue(promise as any as T);\n        return () => {\n            // if (promise?.isPending)\n            //     promise.cancel();\n            unmounted = true;\n        };\n    }, useDeepCompareMemoize(deps));\n    return [value, setValue];\n}\n\nexport const useRefLoad = <T>(\n    loader: () => Promise<T>,\n    deps: React.DependencyList = [],\n    initialValue: T | null = null\n) => {\n    const ref = React.useRef(initialValue);\n    ref.current = useLoad(loader, deps, initialValue);\n    return ref;\n};\nexport const useRefLoadState = <T>(\n    loader: () => Promise<T>,\n    deps: React.DependencyList = [],\n    initialValue: T | null = null\n) : [React.RefObject<T | null>, React.Dispatch<React.SetStateAction<T | null>>] => {\n    const ref = React.useRef(initialValue);\n    const [value, setValue] = useLoadState(loader, deps, initialValue);\n    ref.current = value;\n    return [ref, setValue];\n};\n\n// export const useFakeLoadState = (deps: React.DependencyList = []) => {\n//     React.useState();\n//     React.useEffect(() => {/* ... */}, useDeepCompareMemoize(deps));\n// }\n\n\n// // first element is string (entity name), strictly required\n// export type CacheDependencies = [string, ...Array<any>];\n\n// interface CachePart {\n//     deps?: CacheDependencies;\n//     expires?: number;\n//     value: any;\n// }\n// const cache : CachePart[] = [];\n// // @ts-ignore\n// window.cache = cache;\n// interface CacheProcessPart {\n//     id: string;\n//     deps: CacheDependencies;\n//     callbacks: ((value: any) => void)[];\n// }\n// const processes : CacheProcessPart[] = [];\n\n// export const findCache = (myDeps: CacheDependencies) =>\n//     cache.find(({ deps, expires }) =>\n//         deepCompareEquals(myDeps, deps) &&\n//         expires > Date.now()\n//     );\n// export const findProcess = (myDeps: CacheDependencies) => \n//     processes.find(({ deps }) => deepCompareEquals(myDeps, deps));\n\n// export const removeExpiredCache = () => {\n//     for (let i = 0; i < cache.length; ++i)\n//         if (cache[i].expires <= Date.now())\n//             cache.splice(i--, 1);\n// }\n\n// export const removeCache = (deps: CacheDependencies) => {\n//     for (let i = 0; i < cache.length; ++i) {\n//         const cachePart = cache[i];\n//         if (deepCompareEquals(cachePart.deps.slice(0, deps.length), deps)) {\n//             cache.splice(i, 1);\n//             i--;\n//         }\n//     }\n// }\n\n// export const useLoadStateCached = <T>(\n//     loader: () => Promise<T>,\n//     deps: CacheDependencies,\n//     expiresAfter: number = 1000 * 60 * 5 // 5 minutes\n//     // initialValue is always null, just to make things easier\n//     // when expiresAfter === 0, loader is not executed, always returns null\n// ) : [T | null, React.Dispatch<React.SetStateAction<T>>] => {\n//     const [value, setValue] = React.useState<T>(findCache(deps)?.value || null);\n\n//     React.useEffect(() => {\n//         let forgot = false;\n//         const updateValue = value => {\n//             if (forgot) {\n//                 // we have been forgotten, deps changed.\n//                 // maybe even can't do setState()! (in case unmount)\n//                 return;\n//             }\n//             setValue(value as T);\n//         }\n\n//         let cachePart : CachePart;\n\n//         let promise : Promise<T>;\n//         let process : CacheProcessPart;\n//         if (!(cachePart = findCache(deps))) {\n//             if ((process = findProcess(deps)) && expiresAfter > 0) {\n//                 process.callbacks.push(updateValue);\n//             } else {\n//                 process = { id: ~~(9999999 * Math.random()) + '', deps, callbacks: [] };\n//                 if (expiresAfter > 0) {\n//                     processes.push(process);\n//                     promise = loader();\n//                     if (promise && promise['then'])\n//                         promise.then(value => {\n//                             if (expiresAfter > 0) {\n//                                 cache.push({\n//                                     deps,\n//                                     expires: Date.now() + expiresAfter,\n//                                     value\n//                                 });\n//                                 process.callbacks.map(callback => callback(value));\n//                                 let index;\n//                                 if ((index = processes.findIndex(({id}) => id === process.id)) >= 0)\n//                                     processes.splice(index, 1);\n//                             }\n//                             updateValue(value);\n//                         });\n//                     else updateValue(promise as any as T);\n//                 } else {\n//                     updateValue(null);\n//                 }\n//             }\n//         } else if (value !== cachePart.value) {\n//             setValue(cachePart.value);\n//         }\n        \n//         removeExpiredCache();\n\n//         return () => {\n//             forgot = true;\n//             // TODO: cancel all processes when they all are unmounted\n//             if (promise?.isPending && (!process || process?.callbacks?.length === 0)) {\n//                 promise.cancel();\n//             } else if (process?.callbacks) {\n//                 process.callbacks = process.callbacks.filter(c => c !== updateValue);\n//                 if (process.callbacks.length === 0) {\n//                     let index;\n//                     if ((index = processes.findIndex(({id}) => id === process.id)) >= 0)\n//                         processes.splice(index, 1);\n//                 }\n//             }\n//         };\n//     }, useDeepCompareMemoize([deps, expiresAfter]));\n\n//     return [value, setValue];\n// };\n\n// export const useLoadCached = <T>(\n//     loader: () => Promise<T>,\n//     deps: CacheDependencies,\n//     expiresAfter: number = 1000 * 60 * 5\n// ) : T | null => \n//     useLoadStateCached(loader, deps, expiresAfter)[0];\n\n// useLoadStateCached.removeCache = removeCache;\n// useLoadCached.removeCache = removeCache;","import * as React from 'react';\nimport { Students } from '../../Helpers/api';\n\nimport './index.scss';\n\nconst StudentsBlock = ({ children }: { children: React.ReactNode }) => \n  <div className=\"StudentsBlock\">{children}</div>;\n\nexport default StudentsBlock;","export default __webpack_public_path__ + \"static/media/specialty.1d8ac064.svg\";","export default __webpack_public_path__ + \"static/media/university.60c5e492.svg\";","export default __webpack_public_path__ + \"static/media/quote.42f6c946.svg\";","import * as React from 'react';\nimport { Courses, Student } from '../../Helpers/api';\nimport { P1, P2, P3 } from '../Text';\n\nimport specialty from './specialty.svg';\nimport university from './university.svg';\nimport quote from './quote.svg';\nimport './index.scss';\nimport Button from '../Button';\nimport RippleEffect from '../Button/RippleEffect';\n\nconst withFirstLetterUppercase = (str: string) => {\n  str = str?.trim?.();\n  if (str?.length >= 1)\n    return (str?.[0]?.toUpperCase() || '') + str.substring(1);\n  return str;\n}\n\nconst StudentCard = ({ student }: {\n  student: Student\n}) => (\n  <div className=\"StudentCard\">\n    <div className=\"Top\">\n      <img src={`https://thispersondoesnotexist.com/image?${student?.uuid}`} />\n      <div>\n        <P1>{student?.name}</P1>\n        <span className=\"Course\">\n          <P2>{Courses.find(({ id }) => student?.course === id)?.title}</P2>\n        </span>\n      </div>\n    </div>\n    <div className=\"University\">\n      <img src={university} />\n      <P2>{ student?.university }</P2>\n    </div>\n    <div className=\"Specialty\">\n      <img src={specialty} />\n      <P2>{ student?.speciality }</P2>\n    </div>\n    { student?.about &&\n      <div className=\"Bio\">\n        <img className=\"Quote\" src={quote} />\n        <P2>{student?.about}</P2>\n      </div>\n    }\n    <div className=\"Socials\">\n      { ([...student?.social, 'instagram', 'viber']).map?.((social, key) => \n        <a className={social} key={key}>\n          <RippleEffect />\n          <P1>Зв'язатись в {withFirstLetterUppercase(social)}</P1>\n        </a>\n      )}\n    </div>\n  </div>\n);\n\nexport default StudentCard;","import * as React from 'react';\nimport cx from 'classnames';\n\n// import colors from '../../Palette.scss';\nimport './index.scss';\n\nconst LoadingSpinner = ({\n    className, style,\n    size = 32,\n    // color = colors.primary,\n    color = '#2653AF',\n    center,\n    ...centerProps\n}: {\n    className?: string;\n    style?: React.CSSProperties;\n    size?: number;\n    color?: string;\n    center?: boolean;\n    'center-x'?: boolean;\n    'center-y'?: boolean;\n}) => (\n    <span\n        className={\n            cx(\n                \"LoadingSpinner\", \n                { xcenter: centerProps['center-x'] || center,\n                  ycenter: centerProps['center-y'] || center }, \n                className\n            )\n        }\n        style={style}\n    >\n        <span\n            style={{width: size, height: size}}\n        >\n            <svg\n                viewBox={'0 0 66 66'}\n                style={{width: size, height: size}}\n            >\n                <circle\n                    cx={33} cy={33}\n                    r={30}\n                    fill=\"none\"\n                    strokeLinecap=\"butt\"\n                    strokeWidth={6}\n                    stroke={color}\n                />\n            </svg>\n        </span>\n    </span>\n);\nexport default LoadingSpinner;","import * as React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport Button from '../../Components/Button';\n\nimport Page from '../../Components/Page';\nimport { H1, P1, P2 } from '../../Components/Text';\n\nimport bg from './bg.png';\nimport step1 from './step1.png';\nimport step2 from './step2.png';\nimport step3 from './step3.png';\nimport step4 from './step4.png';\nimport student1 from './student1.png';\nimport student2 from './student2.png';\nimport student3 from './student3.png';\nimport student4 from './student4.png';\nimport student5 from './student5.png';\nimport student6 from './student6.png';\nimport './index.scss';\n\nimport { count, getStudents } from '../../Helpers/api';\nimport useLoad from '../../Helpers/useLoad';\nimport StudentsBlock from '../../Components/Students';\nimport StudentCard from '../../Components/StudentCard';\nimport LoadingSpinner from '../../Components/LoadingSpinner';\n\nconst MainPage = () => {\n  const { i18n, t } = useTranslation();\n  \n  const stat = useLoad(() => count());\n  const firstStudents = useLoad(() => getStudents(3, 0));\n\n  return (\n    <div className=\"MainPage\">\n      <div className=\"First\" style={{ backgroundImage: `url(${bg})` }}>\n        <div>\n          <div className=\"Info\">\n            <H1>{t('main-first-header')}</H1>\n            <br />\n            <br />\n            <ul>\n              <li><P1>{t('main-first-question1')}</P1></li>\n              <li><P1>{t('main-first-question2')}</P1></li>\n              <li><P1>{t('main-first-question3')}</P1></li>\n              <li><P1>{t('main-first-question4')}</P1></li>\n            </ul>\n            <br />\n            <P1>{t('main-first-body1')}</P1>\n            <P1>{t('main-first-body2')}</P1>\n            <br />\n            <br />\n            <Button to=\"/students\">\n              <P2>{t('main-first-button')}</P2>\n            </Button>\n          </div>\n        </div>\n      </div>\n      <div className=\"Second\">\n        <H1>{t('main-second-header')}</H1>\n        <div className=\"Steps\">\n          <div>\n            <img src={step1} />\n            <P2>{t('main-second-step1')}</P2>\n          </div>\n          <div>\n            <img src={step2} />\n            <P2>{t('main-second-step2')}</P2>\n          </div>\n          <div>\n            <img src={step3} />\n            <P2>{t('main-second-step3')}</P2>\n          </div>\n          <div>\n            <img src={step4} />\n            <P2>{t('main-second-step4')}</P2>\n          </div>\n        </div>\n      </div>\n      <div className=\"Third\">\n        <H1>{t('main-third-header')}</H1>\n        {firstStudents ?\n          <StudentsBlock>\n            {firstStudents?.map?.(student => <StudentCard key={student?.uuid} student={student} />)}\n          </StudentsBlock>\n          :\n          <LoadingSpinner center-x />\n        }\n      </div>\n      <div className=\"Fourth\">\n        <div className=\"Main\">\n          <div>\n            <div>\n              <H1>{stat ? stat?.studentsCount : <LoadingSpinner />}</H1>\n              <P1>{t('main-fourth-students')}</P1>\n            </div>\n            <div>\n              <H1>{stat ? stat?.universitiesCount : <LoadingSpinner />}</H1>\n              <P1>{t('main-fourth-universities')}</P1>\n            </div>\n          </div>\n          <br />\n          <H1>{t('main-fourth-header')}</H1>\n          <br />\n          <br />\n          <P2>{t('main-fourth-text')}</P2>\n          <br />\n          <br />\n          <Button to=\"/register\">\n            <P2>{t('main-fourth-register')}</P2>\n          </Button>\n        </div>\n        <div className=\"LeftBg\">\n          <span></span>\n          <span><img src={student1}/></span>\n          <span></span>\n          <span><img src={student2} /></span>\n          <span><img src={student3} /></span>\n        </div>\n        <div className=\"RightBg\">\n          <span></span>\n          <span><img src={student4}/></span>\n          <span></span>\n          <span><img src={student5} /></span>\n          <span></span>\n          <span><img src={student6} /></span>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default MainPage;","export default __webpack_public_path__ + \"static/media/bg.435f74c8.png\";","import * as React from 'react';\nimport { DataSource } from '../../Helpers/api';\nimport LoadingSpinner from '../LoadingSpinner';\n\ninterface AutoScrollableProps<T> {\n    data: DataSource<T>;\n    template: (item: T) => JSX.Element;\n    whenEmpty?: JSX.Element;\n};\n\nconst root = () : HTMLElement => document.getElementById('root')!;\nexport default class AutoScrollable<T> extends React.Component<AutoScrollableProps<T>> {\n\n    private onScroll : any = null;\n    scrollHandler() {\n        if (!this.props.data.complete && !this.props.data.loading && this.atBottom())\n            this.props.data.load();\n    }\n\n    atBottom(gap: number = 16): boolean {\n        if (root() === null)\n            return false;\n        return root().scrollTop + root().clientHeight >= root().scrollHeight - gap;\n    }\n\n    private update : any;\n    componentDidMount() {\n        this.update = this.forceUpdate.bind(this);\n        this.onScroll = this.scrollHandler.bind(this);\n        this.props.data.onUpdate(this.update);\n\n        root().addEventListener('scroll', this.onScroll);\n\n        this.props.data.load();\n    }\n    componentWillUnmount() {\n        this.props.data.offUpdate(this.update);\n        root().removeEventListener('scroll', this.onScroll);\n    }\n\n    componentWillReceiveProps(nextProps : any) {\n        if (this.props.data !== nextProps.data) {\n            this.props.data.offUpdate(this.update);\n            nextProps.data.onUpdate(this.update);\n            nextProps.data.load();\n        }\n    }\n\n    render() {\n        return (\n            <>\n                { this.props.data.items.map(item => this.props.template(item)) }\n                { !this.props.data.loading && this.props.data.items.length === 0 && this.props.whenEmpty }\n                { this.props.data.loading && <LoadingSpinner center-x /> }\n            </>\n        )\n    }\n}","import * as React from 'react';\nimport cx from 'classnames';\nimport { useTranslation } from 'react-i18next';\n\nimport bg from './bg.png';\n\nimport './index.scss';\nimport { H1, P1 } from '../../Components/Text';\nimport AutoScrollable from '../../Components/AutoScrollable';\nimport { Students } from '../../Helpers/api';\nimport StudentCard from '../../Components/StudentCard';\nimport StudentsBlock from '../../Components/Students';\n\nconst StudentsPage = () => {\n  const { t } = useTranslation();\n\n  return (\n    <div className=\"StudentsPage\">\n      <div className=\"Brief\" style={{ backgroundImage: `url(${bg})` }}>\n        <div>\n          <div className=\"Info\">\n            <H1>{t('students-first-header')}</H1>\n            <br />\n            <br />\n            <ul>\n              <li><P1>{t('main-first-question1')}</P1></li>\n              <li><P1>{t('main-first-question2')}</P1></li>\n              <li><P1>{t('main-first-question3')}</P1></li>\n              <li><P1>{t('main-first-question4')}</P1></li>\n            </ul>\n            <br />\n            <P1>{t('main-first-body1')}</P1>\n            <P1>{t('main-first-body2')}</P1>\n          </div>\n        </div>\n      </div>\n      <StudentsBlock>\n        <AutoScrollable\n          data={React.useMemo(() => Students(), [])}\n          template={student => \n            <StudentCard\n              key={student?.uuid}\n              student={student}\n            />\n          }\n        />\n      </StudentsBlock>\n    </div>\n  );\n}\n\nexport default StudentsPage;\n","import * as React from 'react';\nimport {\n  BrowserRouter as Router,\n  Route,\n  Switch,\n  useLocation\n} from \"react-router-dom\";\n\nimport Header from './Components/Header';\nimport MainPage from './Pages/Main';\nimport StudentsPage from './Pages/Students';\n\nfunction App() {\n  return (\n    <Router>\n      <Header />\n      <Route exact path=\"/\" component={MainPage} />\n      <Route exact path=\"/students\" component={StudentsPage} />\n    </Router>\n  );\n}\n\nexport default App;\n","import * as React from 'react';\nimport * as ReactDOM from 'react-dom';\n\nimport i18next, { Resource, i18n } from \"i18next\";\nimport { I18nextProvider, initReactI18next } from \"react-i18next\";\nimport resources from './locales';\n\nimport App from './App';\nimport './index.scss';\n\ni18next\n  .use(initReactI18next)\n  .init({\n    resources,\n    lng: 'uk-UA',\n    keySeparator: false,\n    fallbackLng: 'en-US',\n    interpolation: {\n      escapeValue: false\n    }\n  }, console.log);\n\nReactDOM.render(\n  <React.StrictMode>\n    <I18nextProvider i18n={i18next}>\n      <App />\n    </I18nextProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}